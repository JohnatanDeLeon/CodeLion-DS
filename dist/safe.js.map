{"version":3,"sources":["../src/components/Button/Button.inline.tsx","../src/utils/cn.ts"],"names":["cn","inputs","buttonStyles","ButtonInline","forwardRef","className","variant","size","loading","disabled","children","props","ref","isHovered","setIsHovered","React","isActive","setIsActive","mergedStyles","jsxs","jsx","clsx","cnx","classes","condition"],"mappings":"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","file":"safe.js","sourcesContent":["import React, { forwardRef } from 'react';\r\n\r\n// Simple cn utility inline to avoid dependencies\r\nfunction cn(...inputs: (string | undefined | null | false)[]): string {\r\n  return inputs.filter(Boolean).join(' ');\r\n}\r\n\r\n// Inline styles for Button variants - funcional guarantee\r\nconst buttonStyles = {\r\n  base: {\r\n    display: 'inline-flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    gap: '8px',\r\n    cursor: 'pointer',\r\n    border: 'none',\r\n    borderRadius: '6px',\r\n    fontFamily: 'system-ui, -apple-system, sans-serif',\r\n    fontWeight: '500',\r\n    transition: 'all 0.2s ease-in-out',\r\n    whiteSpace: 'nowrap' as const,\r\n    textDecoration: 'none',\r\n    outline: 'none',\r\n  },\r\n  variants: {\r\n    primary: {\r\n      backgroundColor: '#2563EB',\r\n      color: '#FFFFFF',\r\n      boxShadow: '0 1px 2px 0 rgba(0, 0, 0, 0.05)',\r\n    },\r\n    primaryHover: {\r\n      backgroundColor: '#1D4ED8',\r\n      boxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.1)',\r\n      transform: 'translateY(-1px)',\r\n    },\r\n    secondary: {\r\n      backgroundColor: '#E5E7EB',\r\n      color: '#374151',\r\n      boxShadow: '0 1px 2px 0 rgba(0, 0, 0, 0.05)',\r\n    },\r\n    secondaryHover: {\r\n      backgroundColor: '#D1D5DB',\r\n      boxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.1)',\r\n      transform: 'translateY(-1px)',\r\n    },\r\n    ghost: {\r\n      backgroundColor: 'transparent',\r\n      color: '#374151',\r\n    },\r\n    ghostHover: {\r\n      backgroundColor: '#F3F4F6',\r\n      color: '#111827',\r\n    },\r\n    destructive: {\r\n      backgroundColor: '#DC2626',\r\n      color: '#FFFFFF',\r\n      boxShadow: '0 1px 2px 0 rgba(0, 0, 0, 0.05)',\r\n    },\r\n    destructiveHover: {\r\n      backgroundColor: '#B91C1C',\r\n      boxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.1)',\r\n      transform: 'translateY(-1px)',\r\n    },\r\n    gradient: {\r\n      background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\r\n      color: '#FFFFFF',\r\n      boxShadow: '0 1px 2px 0 rgba(0, 0, 0, 0.05)',\r\n    },\r\n    gradientHover: {\r\n      background: 'linear-gradient(135deg, #764ba2 0%, #667eea 100%)',\r\n      boxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.1)',\r\n      transform: 'translateY(-1px)',\r\n    },\r\n  },\r\n  sizes: {\r\n    sm: {\r\n      height: '32px',\r\n      padding: '0 12px',\r\n      fontSize: '14px',\r\n    },\r\n    md: {\r\n      height: '40px', \r\n      padding: '0 16px',\r\n      fontSize: '16px',\r\n    },\r\n    lg: {\r\n      height: '48px',\r\n      padding: '0 20px',\r\n      fontSize: '18px',\r\n    },\r\n    xl: {\r\n      height: '56px',\r\n      padding: '0 24px',\r\n      fontSize: '20px',\r\n    },\r\n  },\r\n  disabled: {\r\n    pointerEvents: 'none' as const,\r\n    opacity: 0.6,\r\n    cursor: 'not-allowed',\r\n  }\r\n};\r\n\r\nexport interface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\r\n  variant?: 'primary' | 'secondary' | 'ghost' | 'destructive' | 'gradient';\r\n  size?: 'sm' | 'md' | 'lg' | 'xl';\r\n  loading?: boolean;\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport const ButtonInline = forwardRef<HTMLButtonElement, ButtonProps>(\r\n  ({ className, variant = 'primary', size = 'md', loading = false, disabled, children, ...props }, ref) => {\r\n    const [isHovered, setIsHovered] = React.useState(false);\r\n    const [isActive, setIsActive] = React.useState(false);\r\n\r\n    // Merge styles\r\n    const mergedStyles = {\r\n      ...buttonStyles.base,\r\n      ...buttonStyles.variants[variant],\r\n      ...buttonStyles.sizes[size],\r\n      ...(disabled && buttonStyles.disabled),\r\n      ...(isHovered && !disabled && buttonStyles.variants[`${variant}Hover` as keyof typeof buttonStyles.variants]),\r\n      ...(isActive && !disabled && { transform: 'translateY(0)' }),\r\n      ...(loading && { cursor: 'wait' }),\r\n    };\r\n\r\n    return (\r\n      <button\r\n        className={cn(className)}\r\n        ref={ref}\r\n        disabled={disabled || loading}\r\n        style={mergedStyles}\r\n        onMouseEnter={() => setIsHovered(true)}\r\n        onMouseLeave={() => setIsHovered(false)}\r\n        onMouseDown={() => setIsActive(true)}\r\n        onMouseUp={() => setIsActive(false)}\r\n        aria-busy={loading}\r\n        aria-disabled={disabled}\r\n        {...props}\r\n      >\r\n        {loading && (\r\n          <span \r\n            style={{\r\n              display: 'inline-block',\r\n              width: '16px',\r\n              height: '16px',\r\n              border: '2px solid transparent',\r\n              borderTop: '2px solid currentColor',\r\n              borderRadius: '50%',\r\n              animation: 'spin 1s linear infinite',\r\n            }}\r\n          />\r\n        )}\r\n        {children}\r\n      </button>\r\n    );\r\n  }\r\n);\r\n\r\nButtonInline.displayName = 'ButtonInline';\r\n","import { clsx, type ClassValue } from 'clsx';\r\n\r\n/**\r\n * Utility function to merge CSS classes\r\n * Combines clsx functionality for conditional classes\r\n * \r\n * @param inputs - Class values to merge\r\n * @returns Merged class string\r\n * \r\n * @example\r\n * ```tsx\r\n * cn('base-class', isActive && 'active-class', className)\r\n * ```\r\n */\r\nexport function cn(...inputs: ClassValue[]): string {\r\n  return clsx(inputs);\r\n}\r\n\r\n/**\r\n * Type-safe utility for creating conditional class objects\r\n * Useful for component variants and states\r\n * \r\n * @param classes - Object with condition -> class mappings\r\n * @returns Merged class string\r\n * \r\n * @example\r\n * ```tsx\r\n * const buttonClasses = cnx({\r\n *   'btn-base': true,\r\n *   'btn-primary': variant === 'primary',\r\n *   'btn-disabled': disabled,\r\n * });\r\n * ```\r\n */\r\nexport function cnx(classes: Record<string, boolean | undefined>): string {\r\n  return cn(\r\n    Object.entries(classes)\r\n      .filter(([, condition]) => condition)\r\n      .map(([className]) => className)\r\n  );\r\n}\r\n\r\n/**\r\n * Utility for merging Tailwind classes with vanilla-extract styles\r\n * Ensures proper class precedence\r\n * \r\n * @param vanillaExtractClass - Class from vanilla-extract\r\n * @param tailwindClasses - Additional Tailwind utility classes\r\n * @returns Merged class string\r\n * \r\n * @example\r\n * ```tsx\r\n * mergeStyles(buttonStyles({ variant: 'primary' }), 'focus:ring-2 focus:ring-offset-2')\r\n * ```\r\n */\r\nexport function mergeStyles(\r\n  vanillaExtractClass: string,\r\n  ...tailwindClasses: ClassValue[]\r\n): string {\r\n  return cn(vanillaExtractClass, ...tailwindClasses);\r\n}\r\n\r\n/**\r\n * Creates a style variant utility function\r\n * Useful for creating component style variants with TypeScript support\r\n * \r\n * @param baseClass - Base class string\r\n * @param variants - Variant configuration object\r\n * @returns Function that accepts variant props and returns class string\r\n * \r\n * @example\r\n * ```tsx\r\n * const buttonVariants = createVariants('btn-base', {\r\n *   variant: {\r\n *     primary: 'btn-primary',\r\n *     secondary: 'btn-secondary',\r\n *   },\r\n *   size: {\r\n *     sm: 'btn-sm',\r\n *     md: 'btn-md',\r\n *   }\r\n * });\r\n * \r\n * // Usage\r\n * buttonVariants({ variant: 'primary', size: 'md' })\r\n * ```\r\n */\r\nexport function createVariants<T extends Record<string, Record<string, string>>>(\r\n  baseClass: string,\r\n  variants: T\r\n) {\r\n  return function(\r\n    props: {\r\n      [K in keyof T]?: keyof T[K];\r\n    } & { className?: string }\r\n  ): string {\r\n    const variantClasses = Object.entries(variants)\r\n      .map(([key, variantMap]) => {\r\n        const selectedVariant = props[key as keyof typeof props];\r\n        return selectedVariant ? variantMap[selectedVariant as string] : '';\r\n      })\r\n      .filter(Boolean);\r\n\r\n    return cn(baseClass, ...variantClasses, props.className);\r\n  };\r\n}"]}